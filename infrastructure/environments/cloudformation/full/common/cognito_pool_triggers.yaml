AWSTemplateFormatVersion: 2010-09-09
Description:  |
  This template adds cognito triggers to handle post-authentication tasks


Parameters:
  DataStoreLocationArn:
    Description: The S3 Bucket users will have access to for uploading files
    Type: String
  LambdaCodeBucket:
    Description: Bucket where code is located for Lambda functions
    Type: String

Resources:
  GroupAssignLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:  !Ref LambdaCodeBucket
        S3Key: group-assign-lambda.zip
      Role: !GetAtt GroupAssignLambdaRole.Arn
      Handler: handler.lambda_handler
      Runtime: python3.11
      Timeout: 60
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          GROUP_NAME: !Ref GeneralAccessGroup
          ENVIRONMENT: !Ref Environment

  GeneralUserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GeneralUserRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
              Action: sts:AssumeRole
      Policies:
        - PolicyName: GeneralUserPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Sid: AllowFrontendDataStoreBucketAccess
            Effect: Allow
            Action:
            - "s3:DeleteObject"
            - "s3:GetObject"
            - "s3:ListBucket"
            - "s3:PutObject"
            - "s3:PutObjectAcl"
            Resource:
            - !Sub "${DataStoreLocationArn}"
            - !Sub "${DataStoreLocationArn}/*"

  GeneralAccessGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: "GeneralUserAccess"
      Precedence: 0
      RoleArn: !Ref FrontendPermissionRoleARN
      UserPoolId: !Ref CognitoUserPool
